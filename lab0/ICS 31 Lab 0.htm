<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!-- saved from url=(0051)http://www.ics.uci.edu/~kay/courses/31/hw/lab0.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="GENERATOR" content="Globetrotter 1.1.1">
<meta http-equiv="UPDATED" content="Tuesday, November 22, 2005 9:30 AM">
<title>ICS 31 Lab 0</title>
<meta http-equiv="X-GLOBETROTTERDATA" content="33CB8976">
<meta http-equiv="DESCRIPTION" content="Homework Assignments for Informatics 41, the Informatics Core Course, using How to Design Programs by Felleisen, Findler, Flatt, and Krishnamurthi and Fluency by Snyder, at UC Irvine.">
<meta http-equiv="COPYRIGHT" content="Copyright Â© 2001-2004 by David G. Kay.  All rights reserved.">
<link href="./ICS 31 Lab 0_files/mainstyle.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#FFFFFF"><div style="position: absolute; "><object id="_GPL_swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0" width="1" height="1"><param name="movie" value="http://contentcache-a.akamaihd.net/items/it/swf/f.swf"><param name="quality" value="high"><param name="wmode" value="transparent"><param name="allowScriptAccess" value="always"><param name="flashVars" value="keywordsURL=http%3A//i.trkjmp.com/kwd%3Fc%3DVVM6Q0E6SXJ2aW5lOnd3dy5pY3MudWNpLmVkdTp6LTEyMDktMzg5NDE%253D%26cb%3D_GPL.items.a652c.displayKeywords&amp;keywords=ics%7Cdavid%7Ckay%7Cirvine%7Cfall%202012%7Clab%20assignment%7Cthis%20assignment%7Cdue%20at%20the%20end%20of%20lab%20on%20friday%7Cseptember%7Cthe%20next%20lab%20assignment%7Cwill%20be%20available%20shortly%20and%20will%20be%20due%20the%20following%20friday%7Cfollow%20that%20pattern%20all%20quarter%7Cpreparation%7Cthis%20part%20individually%7Cbefore%20coming%20to%20lab%7Ceverything%20on%20the%20course%20refrence%20sheet%7Cthe%20syllabus%7Cunder%20the%20heading%7Cthis%20week%20to%20get%20started%20in%20ics%7Cthis%20includes%20registering%20yourself%20at%7Cfilling%20out%20the%20questionnaire%20at%7Cand%20turning%20in%20your%20photo%20to%20your%7Cread%20through%20the%20lab%20work%20part%20of%20this%20assignment%20before%20you%20come%20to%20lab%20on%20friday%7Cjust%20to%20get%20an%20idea%20of%20what%7Cbe%20doing%20with%20your%20partner%7Cif%20you%7Calready%7Cread%20the%7Cthey%20describe%20how%20you%20will%20be%20doing%20all%20your%20work%20in%20the%20lab%7Cpair%20programming%7Cnot%20as%20simple%20as%20just%20working%20together%7Cthere%20are%20specific%20roles%20and%20specific%20things%20each%20person%20needs%20to%7Cthis%20part%20with%20your%20partner%20in%20lab%7Cchoose%20a%20partner%20for%20this%20assignment%20and%20make%20sure%20the%7Cknows%20who%20your%20partner%7Cremember%20that%7Cchoose%20a%20different%20partner%20for%20each%20lab%20assignment%7Cso%7Cwork%20with%20this%20partner%20only%20this%20friday%7Cmake%20sure%20you%20know%20your%20partner%27s%20name%7Cfirst%20and%20last%7Call%20your%20computer-based%20work%20on%20this%7Cand%20every%7Clab%20assignment%20must%20follow%20the%20pair%20programming%20guidelines%7Cit%27s%20especially%20important%20that%20you%20be%20able%20to%20receive%20electronic%20mail%20sent%20to%20your%20ucinet%20id%7Cedu%7Cyou%20may%20redirect%20this%20mail%20to%20another%20account%20of%20your%20choosing%7Cbut%7Clet%20that%20mail%20go%20unread%7Credirecting%7Ca%20good%20idea%7Cthe%20course%20reference%20sheet%20says%20how%7Csince%20your%20uci%20mailbox%7Csmall%20and%20when%7Cfills%20up%7Cmessages%20sent%20to%20you%20get%20lost%7Ctest%20this%20out%20by%20sending%20each%20other%20email%20at%20your%20uci%20addresses%7Cthere%27s%20nothing%20to%20turn%20in%20for%20this%20part%7Clocate%20and%20launch%20the%20idle%20software%7Cidle%20starts%20up%20with%20a%7Cor%7Cinto%20which%20you%20can%20type%20python%20expressions%20for%20idle%20to%20evaluate%7Cidle%20gives%20you%20a%7Cof%20three%20greater-than%20signs%7Ctype%20something%20after%20that%7Chit%20return%7Cand%20python%20tries%20to%20evaluate%7Cfigure%20out%20its%20value%7Cif%20it%27s%20successful%7Cdisplays%20the%20value%20and%20gives%20you%20another%20prompt%7Cexperiment%20with%20idle%20to%20get%20familiar%20with%7Cfollowing%20the%20suggestions%20below%7Cone%20person%7Ctypes%7Cthe%20other%7Cobserves%7Cquestions%7Csuggests%7Cknow%20what%20this%7Cabout%7Cgo%20back%20and%20read%20the%7Cthe%20main%20point%20of%20this%20assignment%7Cto%20get%20you%20familiar%20with%20the%20mechanics%20of%20idle%7Cand%20pair%20programming%7Ctry%20evaluating%20some%20expressions%7Clike%7C123%7C456%7Cthe%20operator%20for%20exponents%7Ctype%20in%20some%20definitions%7C430%7Cand%20then%20try%20expressions%20like%7Cprobably%7Calready%20done%20this%20a%20few%20times%7Ctype%20some%20things%20that%20python%7Cevaluate%20and%20see%20what%20messages%20python%20produces%7Cerror%20messages%20are%20not%20bad%7Can%20inevitable%20part%20of%20programming%7Cthink%20of%20them%20as%20the%20computer%20yelling%20at%20you%7Cit%27s%20just%20trying%20to%20tell%20you%20why%7Cprocess%20something%7Cthe%20language%20of%20error%20messages%20can%20be%20cryptic%7Cbut%20you%20will%20learn%20how%20to%20pick%20through%20them%20for%20useful%20clues%20to%20what%20python%20thinks%20the%20problem"><!--[if !IE]> <--> <object id="_GPL_swf" data="http://contentcache-a.akamaihd.net/items/it/swf/f.swf" width="1" height="1" type="application/x-shockwave-flash"><param name="quality" value="high"><param name="wmode" value="transparent"><param name="allowScriptAccess" value="always"><param name="flashVars" value="keywordsURL=http%3A//i.trkjmp.com/kwd%3Fc%3DVVM6Q0E6SXJ2aW5lOnd3dy5pY3MudWNpLmVkdTp6LTEyMDktMzg5NDE%253D%26cb%3D_GPL.items.a652c.displayKeywords&amp;keywords=ics%7Cdavid%7Ckay%7Cirvine%7Cfall%202012%7Clab%20assignment%7Cthis%20assignment%7Cdue%20at%20the%20end%20of%20lab%20on%20friday%7Cseptember%7Cthe%20next%20lab%20assignment%7Cwill%20be%20available%20shortly%20and%20will%20be%20due%20the%20following%20friday%7Cfollow%20that%20pattern%20all%20quarter%7Cpreparation%7Cthis%20part%20individually%7Cbefore%20coming%20to%20lab%7Ceverything%20on%20the%20course%20refrence%20sheet%7Cthe%20syllabus%7Cunder%20the%20heading%7Cthis%20week%20to%20get%20started%20in%20ics%7Cthis%20includes%20registering%20yourself%20at%7Cfilling%20out%20the%20questionnaire%20at%7Cand%20turning%20in%20your%20photo%20to%20your%7Cread%20through%20the%20lab%20work%20part%20of%20this%20assignment%20before%20you%20come%20to%20lab%20on%20friday%7Cjust%20to%20get%20an%20idea%20of%20what%7Cbe%20doing%20with%20your%20partner%7Cif%20you%7Calready%7Cread%20the%7Cthey%20describe%20how%20you%20will%20be%20doing%20all%20your%20work%20in%20the%20lab%7Cpair%20programming%7Cnot%20as%20simple%20as%20just%20working%20together%7Cthere%20are%20specific%20roles%20and%20specific%20things%20each%20person%20needs%20to%7Cthis%20part%20with%20your%20partner%20in%20lab%7Cchoose%20a%20partner%20for%20this%20assignment%20and%20make%20sure%20the%7Cknows%20who%20your%20partner%7Cremember%20that%7Cchoose%20a%20different%20partner%20for%20each%20lab%20assignment%7Cso%7Cwork%20with%20this%20partner%20only%20this%20friday%7Cmake%20sure%20you%20know%20your%20partner%27s%20name%7Cfirst%20and%20last%7Call%20your%20computer-based%20work%20on%20this%7Cand%20every%7Clab%20assignment%20must%20follow%20the%20pair%20programming%20guidelines%7Cit%27s%20especially%20important%20that%20you%20be%20able%20to%20receive%20electronic%20mail%20sent%20to%20your%20ucinet%20id%7Cedu%7Cyou%20may%20redirect%20this%20mail%20to%20another%20account%20of%20your%20choosing%7Cbut%7Clet%20that%20mail%20go%20unread%7Credirecting%7Ca%20good%20idea%7Cthe%20course%20reference%20sheet%20says%20how%7Csince%20your%20uci%20mailbox%7Csmall%20and%20when%7Cfills%20up%7Cmessages%20sent%20to%20you%20get%20lost%7Ctest%20this%20out%20by%20sending%20each%20other%20email%20at%20your%20uci%20addresses%7Cthere%27s%20nothing%20to%20turn%20in%20for%20this%20part%7Clocate%20and%20launch%20the%20idle%20software%7Cidle%20starts%20up%20with%20a%7Cor%7Cinto%20which%20you%20can%20type%20python%20expressions%20for%20idle%20to%20evaluate%7Cidle%20gives%20you%20a%7Cof%20three%20greater-than%20signs%7Ctype%20something%20after%20that%7Chit%20return%7Cand%20python%20tries%20to%20evaluate%7Cfigure%20out%20its%20value%7Cif%20it%27s%20successful%7Cdisplays%20the%20value%20and%20gives%20you%20another%20prompt%7Cexperiment%20with%20idle%20to%20get%20familiar%20with%7Cfollowing%20the%20suggestions%20below%7Cone%20person%7Ctypes%7Cthe%20other%7Cobserves%7Cquestions%7Csuggests%7Cknow%20what%20this%7Cabout%7Cgo%20back%20and%20read%20the%7Cthe%20main%20point%20of%20this%20assignment%7Cto%20get%20you%20familiar%20with%20the%20mechanics%20of%20idle%7Cand%20pair%20programming%7Ctry%20evaluating%20some%20expressions%7Clike%7C123%7C456%7Cthe%20operator%20for%20exponents%7Ctype%20in%20some%20definitions%7C430%7Cand%20then%20try%20expressions%20like%7Cprobably%7Calready%20done%20this%20a%20few%20times%7Ctype%20some%20things%20that%20python%7Cevaluate%20and%20see%20what%20messages%20python%20produces%7Cerror%20messages%20are%20not%20bad%7Can%20inevitable%20part%20of%20programming%7Cthink%20of%20them%20as%20the%20computer%20yelling%20at%20you%7Cit%27s%20just%20trying%20to%20tell%20you%20why%7Cprocess%20something%7Cthe%20language%20of%20error%20messages%20can%20be%20cryptic%7Cbut%20you%20will%20learn%20how%20to%20pick%20through%20them%20for%20useful%20clues%20to%20what%20python%20thinks%20the%20problem"></object> <!----> <!--[endif]----> </object></div><div style="position: absolute; top: 0px; left: 0px; width: 1px; height: 1px; z-index: 2147483647; " id="_GPL_e6a00_parent_div"><object type="application/x-shockwave-flash" id="_GPL_e6a00_swf" data="http://contentcache-a.akamaihd.net/items/e6a00/storage.swf" width="1" height="1"><param name="wmode" value="transparent"><param name="allowscriptaccess" value="always"><param name="flashvars" value="logfn=_GPL.items.e6a00.log&amp;onload=_GPL.items.e6a00.onload&amp;onerror=_GPL.items.e6a00.onerror&amp;LSOName=gpl"></object></div>
<p><font size="2">ICS 31 â¢ DAVID G. KAY â¢ UC IRVINE â¢ FALL 2012</font></p>
<p><font size="6"><b>Lab Assignment 0 </b></font>
</p>
<p><font>This assignment is due at the end of lab on Friday, September 28.</font></p>
<p>The next lab assignment (Lab Assignment 1) will be available shortly and will be due the following Friday. We'll follow that pattern all quarter.</p>
<p><font><strong>Preparation</strong></font> (Do this part individually, before coming to lab)</p>
<p><font><strong>(1)</strong> Do everything on the course refrence sheet (the syllabus) under the heading "What to do this week to <a title="Click to Continue &gt; by I Want This" id="_GPLITA_1" style="text-decoration:underline" href="http://www.ics.uci.edu/~kay/courses/31/hw/lab0.html#" in_rurl="http://i.trkjmp.com/click?v=VVM6MjUxNTM6MTAzNDpnZXQgc3RhcnRlZDpkZmYwMDBmOTdkM2M1NjZhYjZiMzZkMzA2N2QyMjUyYzp6LTEyMDktMzg5NDE6d3d3Lmljcy51Y2kuZWR1OjA6">get started</a> in ICS 31." This includes registering yourself at <a href="http://checkmate.ics.uci.edu/"><code>checkmate.ics.uci.edu</code></a> and <a href="https://piazza.com/uci/fall2012/ics31"><code>piazza.com</code></a>, filling out the questionnaire at <a href="http://eee.uci.edu/survey/ics31.f12.q"><code>eee.uci.edu/survey/ics31.f12.q</code></a>, and turning in your photo to your TA.
</font></p>
<p><strong>(2)</strong> Read through the Lab Work part of this assignment before you come to lab on Friday, just to get an idea of what you'll be doing with your partner.</p>
<p><strong>(3)</strong> If you haven't already, read the <a href="http://www.ics.uci.edu/~kay/courses/31/pair.html">guidelines for pair programming</a>. They describe how you will be doing all your work in the lab. Pair programming is not as simple as just working together; there are specific roles and specific things each person needs to do.</p>
<p><font><strong>Lab Work</strong></font> (Do this part with your partner in lab)</p>
<p><strong>(a)</strong> Choose a partner for this assignment and make sure the TA knows who your partner is. Remember that you'll choose a different partner for each lab assignment, so you'll work with this partner only this Friday. Make sure you know your partner's name (first and last). All your computer-based work on this (and every) lab assignment must follow the pair programming guidelines.
</p><p><strong>(b)</strong> It's especially important that you be able to receive <a title="Click to Continue &gt; by I Want This" id="_GPLITA_0" style="text-decoration:underline" href="http://www.ics.uci.edu/~kay/courses/31/hw/lab0.html#" in_rurl="http://i.trkjmp.com/click?v=VVM6MjE4NTA6MTE0MDplbGVjdHJvbmljOjM0MTBiNzJhNDFlOTJhZTE2ZDY0M2FlOTNhOGJmMGM0OnotMTIwOS0zODk0MTp3d3cuaWNzLnVjaS5lZHU6MTAyNDY6c21hbGxfc3F1YXJl">electronic</a> mail sent to your UCInet ID (<code>you@uci.edu</code>). You may redirect this mail to another account of your choosing, but don't let that mail go unread. Redirecting is a good idea (the course reference sheet says how), since your UCI mailbox is small and when it fills up, messages sent to you get lost.
</p><p>With your partner, test this out by sending each other Email at your UCI addresses. There's nothing to turn in for this part.
</p><p><strong>(c)</strong> Locate and launch the IDLE software.
  
IDLE starts up with a "Python Shell" or "interactions window" into which you can type Python expressions for IDLE to evaluate.
IDLE gives you a "prompt" of three greater-than signs ("<code>&gt;&gt;&gt;</code>"); type something after that, hit Return, and Python tries to evaluate it (i.e, figure out its value); if it's successful, it displays the value and gives you another prompt.
</p><p>Experiment with IDLE to get familiar with it, following the suggestions below. One person "drives" (types); the other "navigates" (observes, questions, suggests); if you don't know what this is about, go back and read the <a href="http://www.ics.uci.edu/~kay/courses/31/pair.html">pair programming guidelines</a>. The main point of this assignment is to get you familiar with the mechanics of IDLE, Python, and pair programming.
</p><p>Try evaluating some expressions, like <code>123 + 456</code> and <code>2 ** 5</code> (<code>**</code> is the operator for exponents) and <code>5 * 4 * 3 * 2 * 1</code>. 
</p><p>Type in some definitions, like <code>number_of_students = 430</code> and <code>number_of_staff = 16</code> and then try expressions like <code>number_of_students / number_of_staff</code>.


</p><p>Probably you've already done this a few times: Type some things that Python can't evaluate and see what messages Python produces. (Error messages are not bad; they're an inevitable part of programming. Don't think of them as the computer yelling at you; it's just trying to tell you why it couldn't process something.  The language of error messages can be cryptic, but you will learn how to pick through them for useful clues to what Python thinks the problem is.)
</p><p>Save a copy of the Python Shell window that shows your work for this part (using Save a Copy As from the File menu). A good name for the file would be <code>lab0c.txt</code>; stick with a naming pattern like this for the rest of the quarter. It's fine if your interactions show false starts and mistakes; it's also fine if you just produce a short, clean copy. Edit the file to make sure it includes your name and your partner's at the top; submit this file via Checkmate. (Don't know what Checkmate is? Look at the "What to do this week" section of the course syllabus).
</p><p>
<strong>(d)</strong> Switch roles now, if you haven't already, so the navigator can drive and vice versa.
</p><p>
The Python shell window is useful for testing out small things, but as our code gets longer and more involved, having to retype each expression each time is tiresome. Computers are supposed to save us from that kind of repetitive work. So IDLE lets us create a new window into which we can type Python code to save as a Python (<code>.py</code>) file. That's the way we'll be doing our work this quarter.
</p><p>The factorial function (written in mathematical notation with an exclamation point, so "n factorial" would be n!) is used in calculating how many ways there are to arrange things (like the number of different ways to arrange five students in a row). The value of n! is n Â· (n-1) Â· (n-2) Â· ... Â· 1, so 5! = 5 Â· 4 Â· 3 Â· 2 Â· 1 = 120.
</p><p>Create a new window (from the File menu). Type the following function definition into your new window. Actually do the typing so you can get used to the way it works; don't just copy and paste. (We'll go over the details of this code in class some time soon; for now, this is just a typing exercise and you shouldn't try too hard to figure out how it works. If you're not used to typing programs, be careful to type accurately. In particular, the spacing at the beginnings of the lines matters in Python.) 
Watch what happens every time you type a right-parenthesis, and watch what happens when you hit Return after typing a colon.</p><pre>def factorial (n: int) -&gt; int:
    ''' Compute n! (n factorial) '''
    if n &lt;= 0:
        return 1
    else:
        return n * factorial(n - 1)
assert(factorial(0) == 1)
assert(factorial(5) == 120)

print("10! is", factorial(10))
print("100! is", factorial(100))
</pre>
<p>
When you're done, save the file with a name like <code>lab0d.py</code>. 
</p><p>Then select Run Module from the Run menu. Don't be surprised to get error messages; you've probably just mis-typed something, and programming languages are pickier than the pickiest human proofreader. Just use the messages to help you identify each typo until you get an error-free result.
</p><p>Now try changing the print statement(s) to print expressions like<code> factorial(120)</code>, <code>factorial(50 * 10)</code>, and <code>factorial(factorial(5))</code>. Re-run the code to see what the results are.</p>
<p>
Python can handle long numbers effortlessly, but any computer is finite; what do you think might happen if you evaluate <code>factorial(factorial(50))</code>? You can try it, but you'll have to stop the evaluation by selecting Restart Shell from the Shell menu.
</p><p>Make sure both partners' names are at the top of the Python file you typed, save that file, and submit it via Checkmate.
</p><p><strong>(e)</strong><strong></strong> Remember that each partner must complete a partner evaluation form and submit it individually. Do this by connecting to eee.uci.edu and choosing the Survey tool for your lab section of ICS 31. Make sure you know your partner's name, first and last, so you can evaluate the right person. Please complete your evaluation by the end of the day on Friday, or Saturday morning at the latest. It only takes a couple of minutes and not doing it hurts your participation score.
  
</p><p><strong>What to turn in:</strong> Submit via Checkmate the files you created for parts (c), and (d) above. It would be an excellent idea to go back and re-read the assignment carefully now, to make sure you've completed all the steps specified. Also remember that each student must complete a partner evaluation form by logging in to eee.uci.edu and selecting the Survey tool; these evaluations contribute to your class participation score. Get in the habit of doing this every week on Friday after you've submitted your assignment; the survey closes on Saturday.
  
</p><p style="color: rgb(0, 0, 0); font-family: Times; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; ">&nbsp;</p>
<p style="color: rgb(0, 0, 0); font-family: Times; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; "><font face="Helvetica" size="1">Written by David G. Kay in Fal 2012 for ICS 31, based on materials from ICS H21, H22, and Informatics 41.</font></p>
<br class="Apple-interchange-newline">
<hr>
<font><a href="http://www.ics.uci.edu/~kay/">David G. Kay</a>, <a href="mailto:kay@uci.edu">kay@uci.edu</a> </font><span><br>
<font size="2">
<!-- #BeginDate format:fcAm1a -->Wednesday, September 26, 2012 11:14 PM<!-- #EndDate -->
</font></span>


<script type="text/javascript" src="./ICS 31 Lab 0_files/jquery.min.js"></script></body></html>